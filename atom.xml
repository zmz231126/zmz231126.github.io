<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>茗泽爸爸的博客</title>
  
  <subtitle>今日事今日毕</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-04-12T03:53:20.131Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Ken</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vim中的搜索和替换</title>
    <link href="http://example.com/2024/04/11/substitution%20in%20vim/"/>
    <id>http://example.com/2024/04/11/substitution%20in%20vim/</id>
    <published>2024-04-11T11:15:56.137Z</published>
    <updated>2024-04-12T03:53:20.131Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ranges&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#ranges&quot;&gt;&lt;/a&gt; Ranges&lt;/h1&gt;
&lt;p&gt;For most Vim commands, the default range is the current line</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Vim" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/"/>
    
    
    <category term="Vim" scheme="http://example.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>vim语言</title>
    <link href="http://example.com/2024/04/11/vim%20%E8%AF%AD%E8%A8%80/"/>
    <id>http://example.com/2024/04/11/vim%20%E8%AF%AD%E8%A8%80/</id>
    <published>2024-04-11T11:04:00.000Z</published>
    <updated>2024-04-12T03:37:44.378Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;verbs&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#verbs&quot;&gt;&lt;/a&gt; Verbs&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Powerless verbs&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt; delete</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Vim" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/"/>
    
    
    <category term="Vim" scheme="http://example.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>vim 运算符汇总</title>
    <link href="http://example.com/2024/04/10/vim_operators_post/"/>
    <id>http://example.com/2024/04/10/vim_operators_post/</id>
    <published>2024-04-10T00:46:00.000Z</published>
    <updated>2024-04-12T03:37:44.379Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;+&amp;lt;linenumber&amp;gt;&lt;/code&gt; the cursor will be positioned on the specified line for the first file you open.&lt;/p&gt;
 &lt;figure class=&quot;hig</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Vim" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/"/>
    
    
    <category term="Vim" scheme="http://example.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>函数介绍2</title>
    <link href="http://example.com/2024/04/09/text_string_post/"/>
    <id>http://example.com/2024/04/09/text_string_post/</id>
    <published>2024-04-09T10:22:00.000Z</published>
    <updated>2024-04-12T03:37:44.380Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;help&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#help&quot;&gt;&lt;/a&gt; help()&lt;/h1&gt;
&lt;p&gt;help() 是python中的内置函数, 使用它可以可以查询函数的用法.但是当我们使用help()来查询自定义函数的时候，它无</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>vim shortcuts</title>
    <link href="http://example.com/2024/04/09/vim%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86post/"/>
    <id>http://example.com/2024/04/09/vim%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86post/</id>
    <published>2024-04-08T16:00:00.000Z</published>
    <updated>2024-04-12T03:37:44.381Z</updated>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;jump to the top of the file &lt;code&gt;gg&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;jump to the end of the file &lt;code&gt;G&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;cod</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Vim快捷键" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
    
    <category term="Vim" scheme="http://example.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>字典</title>
    <link href="http://example.com/2024/04/06/%E5%87%BD%E6%95%B0%E7%AE%80%E4%BB%8B/"/>
    <id>http://example.com/2024/04/06/%E5%87%BD%E6%95%B0%E7%AE%80%E4%BB%8B/</id>
    <published>2024-04-06T11:59:00.000Z</published>
    <updated>2024-04-12T03:37:44.381Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;函数也是一个对象. 比如有三行代码是一个完整的功能, 这个功能在不同的地方反复调用, 那么函数就可以用来保存一些&lt;br /&gt;
可以执行的代码, 并且可以在需要时多次调用.&lt;br /&gt;
创建函数&lt;br /&gt;
函数名符合标识符的命名规范&lt;/p&gt;
&lt;figure class=&quot;h</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>字典</title>
    <link href="http://example.com/2024/04/06/%E5%AD%97%E5%85%B8/"/>
    <id>http://example.com/2024/04/06/%E5%AD%97%E5%85%B8/</id>
    <published>2024-04-06T07:33:00.000Z</published>
    <updated>2024-04-09T06:54:27.919Z</updated>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;字典是一种新的数据结构, 称为映射(mapping)&lt;/li&gt;
&lt;li&gt;字典的作用和列表类似, 都是存储对象的容器&lt;/li&gt;
&lt;li&gt;列表存储数据的性能良好, 但是查询数据的性能很差.&lt;/li&gt;
&lt;li&gt;字典中, 每一个元素都有一个唯一的名字, 通过这个名字可以</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>字典</title>
    <link href="http://example.com/2024/04/06/%E9%9B%86%E5%90%88/"/>
    <id>http://example.com/2024/04/06/%E9%9B%86%E5%90%88/</id>
    <published>2024-04-06T07:33:00.000Z</published>
    <updated>2024-04-12T03:37:44.382Z</updated>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;sets can be builded by &lt;code&gt;&amp;#123;&amp;#125;&lt;/code&gt;or &lt;code&gt;set() function&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;sets only accepts immutable objects, list f</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>可变对象</title>
    <link href="http://example.com/2024/04/06/%E5%8F%AF%E5%8F%98%E5%AF%B9%E8%B1%A1/"/>
    <id>http://example.com/2024/04/06/%E5%8F%AF%E5%8F%98%E5%AF%B9%E8%B1%A1/</id>
    <published>2024-04-06T07:11:00.000Z</published>
    <updated>2024-04-06T07:49:24.080Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;对象的三个属性:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id&lt;/li&gt;
&lt;li&gt;类型&lt;/li&gt;
&lt;li&gt;值&lt;br /&gt;
可变是指的&lt;strong&gt;值&lt;/strong&gt;可变.&lt;br /&gt;
我们修改对象时, 如果有其他变量也指向了该对象, 那么这几个变量也会改变. 注意, 它们的id都没有</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>元组</title>
    <link href="http://example.com/2024/04/06/%E5%85%83%E7%BB%84/"/>
    <id>http://example.com/2024/04/06/%E5%85%83%E7%BB%84/</id>
    <published>2024-04-06T06:46:00.000Z</published>
    <updated>2024-04-06T07:49:24.079Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;元组(tuple)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是不可变的序列, 其他的操作方法跟list是一样的. 当我们希望数据不被改变时, 就可以用元组.&lt;/li&gt;
&lt;li&gt;元组使用小括号()创建, 而且是可以省略的, 列表使用[]创建.&lt;/li&gt;
&lt;li&gt;元组不为空, 即时只有一个元</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>range()函数</title>
    <link href="http://example.com/2024/04/06/range()%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2024/04/06/range()%E5%87%BD%E6%95%B0/</id>
    <published>2024-04-06T06:45:00.000Z</published>
    <updated>2024-04-06T07:49:24.078Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;range()函数是一个可以生成一个自然数的序列&lt;br /&gt;
&lt;code&gt;r = range(5)&lt;/code&gt; 生成的序列为[0,1,2,3,4]&lt;br /&gt;
该函数可以生成三个参数:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;起始位置&lt;br /&gt;
可以省略, 默认为0&lt;/li&gt;
&lt;li</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>序列</title>
    <link href="http://example.com/2024/04/05/%E5%88%97%E8%A1%A8/"/>
    <id>http://example.com/2024/04/05/%E5%88%97%E8%A1%A8/</id>
    <published>2024-04-05T15:24:00.000Z</published>
    <updated>2024-04-05T17:33:47.389Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;序列&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#序列&quot;&gt;&lt;/a&gt; 序列&lt;/h1&gt;
&lt;p&gt;序列是Python中最基本的一种数据结构, 数据结构是计算机中数据存储的方式. 序列拥抱保存一种&lt;br /&gt;
&lt;strong&gt;有序&lt;/stron</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>循环语句</title>
    <link href="http://example.com/2024/04/05/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/"/>
    <id>http://example.com/2024/04/05/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/</id>
    <published>2024-04-05T00:56:21.887Z</published>
    <updated>2024-04-05T15:37:59.746Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;循环语句，可以使指定的代码块重复指定的次数，有两种while循环和for循环。&lt;/p&gt;
&lt;h1 id=&quot;while循环&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#while循环&quot;&gt;&lt;/a&gt; while循环&lt;/h1&gt;
&lt;p&gt;【语法】：&lt;br /</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>第二章 LaTeX中几个常用的基本语法</title>
    <link href="http://example.com/2024/04/04/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20LaTeX%E4%B8%AD%E5%87%A0%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://example.com/2024/04/04/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20LaTeX%E4%B8%AD%E5%87%A0%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</id>
    <published>2024-04-04T11:30:05.899Z</published>
    <updated>2024-04-05T00:19:56.692Z</updated>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;latex中，多个空格视为一个空格，连个回车键视为分段，也可以使用&lt;code&gt;&#92;par&lt;/code&gt;命令分段。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;连字：西文字体很多会出现连字现象，可以在字母间加上&lt;code&gt;&amp;#123;&amp;#125;&lt;/code&gt;阻止这</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Latex" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Latex/"/>
    
    
    <category term="LaTeX" scheme="http://example.com/tags/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title>流程控制</title>
    <link href="http://example.com/2024/04/01/if%E8%AF%AD%E5%8F%A5/"/>
    <id>http://example.com/2024/04/01/if%E8%AF%AD%E5%8F%A5/</id>
    <published>2024-03-31T16:00:00.000Z</published>
    <updated>2024-04-05T00:54:48.249Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;Python代码是按照自上而下执行的. 但是通过流程控制语句可以改变流程控制顺序, 也可以让程序反复执行多次.&lt;br /&gt;
分为两大类:&lt;/p&gt;
&lt;h1 id=&quot;条件判断语句&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#条件判断语句&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python中的几个术语</title>
    <link href="http://example.com/2024/03/31/python%E7%9A%84%E5%87%A0%E4%B8%AA%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <id>http://example.com/2024/03/31/python%E7%9A%84%E5%87%A0%E4%B8%AA%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</id>
    <published>2024-03-30T16:00:00.000Z</published>
    <updated>2024-03-31T03:39:54.812Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;【表达式】类似于数学公式比如10 + 5；8 + 4.&lt;/p&gt;
&lt;p&gt;表达式仅仅用来计算一些结果，不会对程序产生实质影响。&lt;/p&gt;
&lt;p&gt;【语句】语句需要完成某种功能，比如打印信息、获取信息、为变量赋值等比如：&lt;code&gt;print()&lt;/code&gt;, &lt;code&gt;a = </summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python交互模式</title>
    <link href="http://example.com/2024/03/31/python%E4%BA%A4%E4%BA%92%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2024/03/31/python%E4%BA%A4%E4%BA%92%E6%A8%A1%E5%BC%8F/</id>
    <published>2024-03-30T16:00:00.000Z</published>
    <updated>2024-03-31T03:39:54.811Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;交互界面：当我们通过命令行进入python，所进入的界面就是python的交互界面。&lt;/p&gt;
&lt;p&gt;交互模式是输入一行执行一行，并不适合日常开发，仅可以做一些日常简单的测试。&lt;/p&gt;
&lt;p&gt;我们可以编写&lt;code&gt;.py&lt;/code&gt;文档，利用【终端】执行。&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="Mac终端" scheme="http://example.com/tags/Mac%E7%BB%88%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>字符串</title>
    <link href="http://example.com/2024/03/31/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://example.com/2024/03/31/%E5%AD%97%E7%AC%A6%E4%B8%B2/</id>
    <published>2024-03-30T16:00:00.000Z</published>
    <updated>2024-03-31T09:45:21.301Z</updated>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;字符串用来表示文本信息, 是使用最多的数据类型. 必须用引号包围, 可以理解成某人说:“”.&lt;/li&gt;
&lt;li&gt;单引号双引号都可以, 但是不可以混合使用. 但是相同的引号不可以嵌套, 但是不同的引号可以嵌套. 下边就是不用引号的嵌套&lt;/li&gt;
&lt;/ul&gt;
&lt;fi</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>变量和标识符</title>
    <link href="http://example.com/2024/03/31/%E5%8F%98%E9%87%8F%E5%92%8C%E6%A0%87%E8%AF%86%E7%AC%A6/"/>
    <id>http://example.com/2024/03/31/%E5%8F%98%E9%87%8F%E5%92%8C%E6%A0%87%E8%AF%86%E7%AC%A6/</id>
    <published>2024-03-30T16:00:00.000Z</published>
    <updated>2024-03-31T03:49:06.980Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;使用变量不需要声明，直接为变量赋值，但是不能使用未被赋值的变量&lt;/p&gt;
&lt;p&gt;python是一个动态类型的语言，可以给变量赋&lt;strong&gt;任意类型的值&lt;/strong&gt;。也可以任意修改变量的值。&lt;/p&gt;
&lt;p&gt;通常变量的名要有意义，比如年龄18，那么我们可以写&lt;code&gt;</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="spyder快捷键" scheme="http://example.com/tags/spyder%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>字符串的复制</title>
    <link href="http://example.com/2024/03/31/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%A4%8D%E5%88%B6/"/>
    <id>http://example.com/2024/03/31/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%A4%8D%E5%88%B6/</id>
    <published>2024-03-30T16:00:00.000Z</published>
    <updated>2024-03-31T08:58:55.818Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;将字符串和数字相乘, 就是复制字符串&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
</feed>
