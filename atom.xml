<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>茗泽爸爸的博客</title>
  
  <subtitle>今日事今日毕</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-05-14T20:18:41.148Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Ken</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/05/15/1.3%20BELOW%20YOUR%20PROGRAM/"/>
    <id>http://example.com/2024/05/15/1.3%20BELOW%20YOUR%20PROGRAM/</id>
    <published>2024-05-14T20:02:02.746Z</published>
    <updated>2024-05-14T20:18:41.148Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;systems-software&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#systems-software&quot;&gt;&lt;/a&gt; Systems Software&lt;/h1&gt;
&lt;p&gt;Sitting between the hardware a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2024/05/15/1.2%20EIGHT%20GREAT%20IDEAS%20IN%20COMPUTER%20ARCHITECTURE/"/>
    <id>http://example.com/2024/05/15/1.2%20EIGHT%20GREAT%20IDEAS%20IN%20COMPUTER%20ARCHITECTURE/</id>
    <published>2024-05-14T18:48:53.718Z</published>
    <updated>2024-05-14T19:32:06.528Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;design-for-moores-law&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#design-for-moores-law&quot;&gt;&lt;/a&gt; design for Moore’s law&lt;/h1&gt;
&lt;p&gt;The one consta</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>function1</title>
    <link href="http://example.com/2024/05/13/function1/"/>
    <id>http://example.com/2024/05/13/function1/</id>
    <published>2024-05-12T16:00:00.000Z</published>
    <updated>2024-05-14T09:55:35.383Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;定义函数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#定义函数&quot;&gt;&lt;/a&gt; 定义函数&lt;/h1&gt;
&lt;p&gt;函数是一个带名字的代块&lt;/p&gt;
&lt;figure class=&quot;highlight py&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Vim mapping</title>
    <link href="http://example.com/2024/04/12/vim_mapping/"/>
    <id>http://example.com/2024/04/12/vim_mapping/</id>
    <published>2024-04-12T09:54:49.646Z</published>
    <updated>2024-05-12T16:11:32.809Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;nmap&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#nmap&quot;&gt;&lt;/a&gt; nmap&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;nmap&lt;/code&gt; command is used to define mapping for Normal mod</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Vim" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/"/>
    
    <category term="Vim快捷键3" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/Vim%E5%BF%AB%E6%8D%B7%E9%94%AE3/"/>
    
    
    <category term="Vim" scheme="http://example.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Vim中的搜索和替换</title>
    <link href="http://example.com/2024/04/11/substitution%20in%20vim/"/>
    <id>http://example.com/2024/04/11/substitution%20in%20vim/</id>
    <published>2024-04-11T11:15:56.137Z</published>
    <updated>2024-05-12T17:08:17.949Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ranges&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#ranges&quot;&gt;&lt;/a&gt; Ranges&lt;/h1&gt;
&lt;p&gt;For most Vim commands, the default range is the current line</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Vim" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/"/>
    
    <category term="Vim快捷键5" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/Vim%E5%BF%AB%E6%8D%B7%E9%94%AE5/"/>
    
    
    <category term="Vim" scheme="http://example.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Vim编辑命令2</title>
    <link href="http://example.com/2024/04/11/Vim%20basic%20intro/"/>
    <id>http://example.com/2024/04/11/Vim%20basic%20intro/</id>
    <published>2024-04-11T11:04:00.000Z</published>
    <updated>2024-05-12T17:24:07.506Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;command-mode&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#command-mode&quot;&gt;&lt;/a&gt; Command Mode:&lt;/h1&gt;
&lt;p&gt;This is the the default mode in which vim</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Vim" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/"/>
    
    <category term="Vim快捷键6" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/Vim%E5%BF%AB%E6%8D%B7%E9%94%AE6/"/>
    
    
    <category term="Vim" scheme="http://example.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>sort方法</title>
    <link href="http://example.com/2024/04/11/sort%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2024/04/11/sort%E6%96%B9%E6%B3%95/</id>
    <published>2024-04-11T11:04:00.000Z</published>
    <updated>2024-05-12T17:11:35.344Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;sort&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sort&quot;&gt;&lt;/a&gt; .sort()&lt;/h1&gt;
&lt;p&gt;sort可以接受一个函数作为参数，当设置了函数作为参数，它会遍历列表中的元素作为函数的参数，并根据函数的返回值作为依据进行排序</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/python/python%E5%9F%BA%E7%A1%80/"/>
    
    <category term="Vim快捷键4" scheme="http://example.com/categories/python/python%E5%9F%BA%E7%A1%80/Vim%E5%BF%AB%E6%8D%B7%E9%94%AE4/"/>
    
    
    <category term="Vim" scheme="http://example.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>vim编辑命令1</title>
    <link href="http://example.com/2024/04/11/vim%20%E8%AF%AD%E8%A8%80/"/>
    <id>http://example.com/2024/04/11/vim%20%E8%AF%AD%E8%A8%80/</id>
    <published>2024-04-11T11:04:00.000Z</published>
    <updated>2024-05-12T17:23:55.070Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;verbs&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#verbs&quot;&gt;&lt;/a&gt; Verbs&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Powerless verbs&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt; delete</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Vim" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/"/>
    
    <category term="Vim快捷键4" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/Vim%E5%BF%AB%E6%8D%B7%E9%94%AE4/"/>
    
    
    <category term="Vim" scheme="http://example.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>高阶函数</title>
    <link href="http://example.com/2024/04/11/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2024/04/11/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/</id>
    <published>2024-04-11T11:04:00.000Z</published>
    <updated>2024-05-12T17:26:17.048Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;高阶函数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#高阶函数&quot;&gt;&lt;/a&gt; 高阶函数&lt;/h1&gt;
&lt;p&gt;定义：接受函数作为参数，并且将函数作为返回值返回。&lt;br /&gt;
例子: 定义一个函数，可以将指定列表中所有的偶数返回。&lt;/p&gt;
&lt;f</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>vim 运算符汇总</title>
    <link href="http://example.com/2024/04/10/vim_operators_post/"/>
    <id>http://example.com/2024/04/10/vim_operators_post/</id>
    <published>2024-04-10T00:46:00.000Z</published>
    <updated>2024-05-12T16:11:06.276Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;+&amp;lt;linenumber&amp;gt;&lt;/code&gt; the cursor will be positioned on the specified line for the first file you open.&lt;/p&gt;
 &lt;figure class=&quot;hig</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Vim" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/"/>
    
    <category term="Vim 快捷键2" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/Vim-%E5%BF%AB%E6%8D%B7%E9%94%AE2/"/>
    
    
    <category term="Vim" scheme="http://example.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>函数介绍2</title>
    <link href="http://example.com/2024/04/09/%E5%87%BD%E6%95%B0%E4%BB%8B%E7%BB%8D2/"/>
    <id>http://example.com/2024/04/09/%E5%87%BD%E6%95%B0%E4%BB%8B%E7%BB%8D2/</id>
    <published>2024-04-09T10:22:00.000Z</published>
    <updated>2024-05-12T17:29:33.787Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;help&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#help&quot;&gt;&lt;/a&gt; help()&lt;/h1&gt;
&lt;p&gt;help() 是python中的内置函数, 使用它可以可以查询函数的用法.但是当我们使用help()来查询自定义函数的时候，它无</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>vim shortcuts</title>
    <link href="http://example.com/2024/04/09/vim%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86post/"/>
    <id>http://example.com/2024/04/09/vim%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86post/</id>
    <published>2024-04-08T16:00:00.000Z</published>
    <updated>2024-05-12T16:11:15.690Z</updated>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;jump to the top of the file &lt;code&gt;gg&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;jump to the end of the file &lt;code&gt;G&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;cod</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Vim" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/"/>
    
    <category term="Vim快捷键1" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/Vim/Vim%E5%BF%AB%E6%8D%B7%E9%94%AE1/"/>
    
    
    <category term="Vim" scheme="http://example.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>函数简介</title>
    <link href="http://example.com/2024/04/06/%E5%87%BD%E6%95%B0%E7%AE%80%E4%BB%8B/"/>
    <id>http://example.com/2024/04/06/%E5%87%BD%E6%95%B0%E7%AE%80%E4%BB%8B/</id>
    <published>2024-04-06T11:59:00.000Z</published>
    <updated>2024-05-12T17:21:19.784Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;函数也是一个对象. 比如有三行代码是一个完整的功能, 这个功能在不同的地方反复调用, 那么函数就可以用来保存一些&lt;br /&gt;
可以执行的代码, 并且可以在需要时多次调用.&lt;br /&gt;
创建函数&lt;br /&gt;
函数名符合标识符的命名规范&lt;/p&gt;
&lt;figure class=&quot;h</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>字典</title>
    <link href="http://example.com/2024/04/06/%E5%AD%97%E5%85%B8/"/>
    <id>http://example.com/2024/04/06/%E5%AD%97%E5%85%B8/</id>
    <published>2024-04-06T07:33:00.000Z</published>
    <updated>2024-04-09T06:54:27.919Z</updated>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;字典是一种新的数据结构, 称为映射(mapping)&lt;/li&gt;
&lt;li&gt;字典的作用和列表类似, 都是存储对象的容器&lt;/li&gt;
&lt;li&gt;列表存储数据的性能良好, 但是查询数据的性能很差.&lt;/li&gt;
&lt;li&gt;字典中, 每一个元素都有一个唯一的名字, 通过这个名字可以</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>集合</title>
    <link href="http://example.com/2024/04/06/%E9%9B%86%E5%90%88/"/>
    <id>http://example.com/2024/04/06/%E9%9B%86%E5%90%88/</id>
    <published>2024-04-06T07:33:00.000Z</published>
    <updated>2024-05-12T17:27:13.423Z</updated>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;sets can be builded by &lt;code&gt;&amp;#123;&amp;#125;&lt;/code&gt;or &lt;code&gt;set() function&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;sets only accepts immutable objects, list f</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>可变对象</title>
    <link href="http://example.com/2024/04/06/%E5%8F%AF%E5%8F%98%E5%AF%B9%E8%B1%A1/"/>
    <id>http://example.com/2024/04/06/%E5%8F%AF%E5%8F%98%E5%AF%B9%E8%B1%A1/</id>
    <published>2024-04-06T07:11:00.000Z</published>
    <updated>2024-04-06T07:49:24.080Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;对象的三个属性:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id&lt;/li&gt;
&lt;li&gt;类型&lt;/li&gt;
&lt;li&gt;值&lt;br /&gt;
可变是指的&lt;strong&gt;值&lt;/strong&gt;可变.&lt;br /&gt;
我们修改对象时, 如果有其他变量也指向了该对象, 那么这几个变量也会改变. 注意, 它们的id都没有</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>元组</title>
    <link href="http://example.com/2024/04/06/%E5%85%83%E7%BB%84/"/>
    <id>http://example.com/2024/04/06/%E5%85%83%E7%BB%84/</id>
    <published>2024-04-06T06:46:00.000Z</published>
    <updated>2024-04-06T07:49:24.079Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;元组(tuple)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是不可变的序列, 其他的操作方法跟list是一样的. 当我们希望数据不被改变时, 就可以用元组.&lt;/li&gt;
&lt;li&gt;元组使用小括号()创建, 而且是可以省略的, 列表使用[]创建.&lt;/li&gt;
&lt;li&gt;元组不为空, 即时只有一个元</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>range()函数</title>
    <link href="http://example.com/2024/04/06/range()%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2024/04/06/range()%E5%87%BD%E6%95%B0/</id>
    <published>2024-04-06T06:45:00.000Z</published>
    <updated>2024-04-06T07:49:24.078Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;range()函数是一个可以生成一个自然数的序列&lt;br /&gt;
&lt;code&gt;r = range(5)&lt;/code&gt; 生成的序列为[0,1,2,3,4]&lt;br /&gt;
该函数可以生成三个参数:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;起始位置&lt;br /&gt;
可以省略, 默认为0&lt;/li&gt;
&lt;li</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>序列</title>
    <link href="http://example.com/2024/04/05/%E5%88%97%E8%A1%A8/"/>
    <id>http://example.com/2024/04/05/%E5%88%97%E8%A1%A8/</id>
    <published>2024-04-05T15:24:00.000Z</published>
    <updated>2024-04-05T17:33:47.389Z</updated>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;序列&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#序列&quot;&gt;&lt;/a&gt; 序列&lt;/h1&gt;
&lt;p&gt;序列是Python中最基本的一种数据结构, 数据结构是计算机中数据存储的方式. 序列拥抱保存一种&lt;br /&gt;
&lt;strong&gt;有序&lt;/stron</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>循环语句</title>
    <link href="http://example.com/2024/04/05/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/"/>
    <id>http://example.com/2024/04/05/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/</id>
    <published>2024-04-05T00:56:21.887Z</published>
    <updated>2024-05-12T17:28:20.751Z</updated>
    
    
      
      
    <summary type="html">&lt;p&gt;循环语句，可以使指定的代码块重复指定的次数，有两种while循环和for循环。&lt;/p&gt;
&lt;h1 id=&quot;while循环&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#while循环&quot;&gt;&lt;/a&gt; while循环&lt;/h1&gt;
&lt;p&gt;【语法】：&lt;br /</summary>
      
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="python" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/"/>
    
    <category term="python基础" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/python/python%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
</feed>
