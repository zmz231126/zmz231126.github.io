<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2024/03/24/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2>
<h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>流程控制</title>
    <url>/2024/04/01/if%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<p>Python代码是按照自上而下执行的. 但是通过流程控制语句可以改变流程控制顺序, 也可以让程序反复执行多次.<br />
分为两大类:</p>
<h1 id="条件判断语句"><a class="markdownIt-Anchor" href="#条件判断语句"></a> 条件判断语句</h1>
<p>语法: if 条件表达式: 语句<br />
执行流程:<br />
1. 首先对条件表达式进行求值判断.<br />
2. True执行语句<br />
3. False不执行语句</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num = <span class="number">10</span></span><br><span class="line"><span class="keyword">if</span> num ==<span class="number">10</span>: <span class="built_in">print</span>(<span class="string">&quot;我会出来吗&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>执行后返回<code>我会出来吗</code></p>
<p>默认情况下, if只会控制紧随其后的语句, 如果需要控制多条语句,需要使用代码块.</p>
<h1 id="代码块python是缩紧严格的语言"><a class="markdownIt-Anchor" href="#代码块python是缩紧严格的语言"></a> 代码块(python是缩紧严格的语言)</h1>
<p>可以让if控制多条语句. 语句在<code>:</code>下一行开始写. 下边等缩进的内容就是代码块. 这也是一般使用if语句的方式.<br />
可以用Tab缩紧, 或者4个空格缩紧. 推荐使用空格缩紧, 而且整片代码使用方式要统一.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num = <span class="number">10</span></span><br><span class="line"><span class="keyword">if</span> num == <span class="number">10</span>: </span><br><span class="line">    <span class="built_in">print</span>(<span class="number">123</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">234</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">345</span>)</span><br></pre></td></tr></table></figure>
<p>这里会全部返回</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123</span><br><span class="line">234</span><br><span class="line">345</span><br></pre></td></tr></table></figure>
<h1 id="input函数"><a class="markdownIt-Anchor" href="#input函数"></a> input()函数</h1>
<p>调用input()后, 等待用户输入, 输入结束后, 继续执行.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="built_in">input</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;用户输入了<span class="subst">&#123;a&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>在命令行中输入’你好’,回车返回<code>用户输入了你好</code></p>
<div class="tip warning"><p>不论用户输入的是什么数据, 返回值都是字符串. 如果要使用返回值, 需要对返回值进行类型转换.</p>
</div>
<p>input()函数可以输入一个字符串作为参数, 作为输入内容的提示文字.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">username = <span class="built_in">input</span>(<span class="string">&quot;请输入一个用户名&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> username == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;欢迎管理员光临&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>返回</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">欢迎管理员光临</span><br></pre></td></tr></table></figure>
<p>input()可以暂时阻止程序结束</p>
<h1 id="if-else语句"><a class="markdownIt-Anchor" href="#if-else语句"></a> if else语句</h1>
<p>单纯的if语句, 如果条件判断语句为True, 则执行代码块, 但是如果是False, 则返回空值. if else语句则提供了另一个选择.<br />
语法:<br />
if 条件表达式:<br />
代码块<br />
else 条件表达式:<br />
代码块<br />
执行流程：<br />
先对条件表达式进行求职, 若为True, 执行if代码块; 若为False执行else代码块</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">age = <span class="built_in">input</span>(<span class="string">&quot;请输入你的年龄&quot;</span>)<span class="keyword">if</span> <span class="built_in">int</span>(age) &gt;= <span class="number">18</span>:    <span class="built_in">print</span>(<span class="string">&quot;您一经成年了&quot;</span>)<span class="keyword">else</span>:    <span class="built_in">print</span>(<span class="string">&quot;你还未成年&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>返回值为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">请输入你的年龄17</span><br><span class="line">你还未成年</span><br></pre></td></tr></table></figure>
<h1 id="if-elif-else"><a class="markdownIt-Anchor" href="#if-elif-else"></a> if-elif-else</h1>
<p>语法:<br />
if 条件表达式:<br />
代码块<br />
elif 条件表达式:<br />
代码块<br />
elif 条件表达式:<br />
代码块<br />
elif 条件表达式:<br />
代码块<br />
else:<br />
代码块<br />
执行流程:</p>
<ul>
<li>自上而上依次执行, 当发现表达式为True时, 执行相应的代码块, 并停止程序执行.</li>
<li>如果都为False, 执行else代码块.</li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python交互模式</title>
    <url>/2024/03/31/python%E4%BA%A4%E4%BA%92%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<p>交互界面：当我们通过命令行进入python，所进入的界面就是python的交互界面。</p>
<p>交互模式是输入一行执行一行，并不适合日常开发，仅可以做一些日常简单的测试。</p>
<p>我们可以编写<code>.py</code>文档，利用【终端】执行。</p>
<p>mac终端运行python文件。</p>
<ol>
<li>
<p>比如在桌面新建了<code>.py</code>文档。</p>
</li>
<li>
<p>打开终端，输入<code>cd ~/desktop</code>回车。</p>
</li>
<li>
<p>输入<code>python3 filename.py</code>回车。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Mac终端</tag>
      </tags>
  </entry>
  <entry>
    <title>python中的几个术语</title>
    <url>/2024/03/31/python%E7%9A%84%E5%87%A0%E4%B8%AA%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<p>【表达式】类似于数学公式比如10 + 5；8 + 4.</p>
<p>表达式仅仅用来计算一些结果，不会对程序产生实质影响。</p>
<p>【语句】语句需要完成某种功能，比如打印信息、获取信息、为变量赋值等比如：<code>print()</code>, <code>a = 10</code>。</p>
<p>语句的执行会对程序执行产生影响。语句在命令行中不一定会有执行结果。有返回值的语句，会有返回结果。</p>
<p>【程序】是多个语句和表达式构成的。</p>
<p>【函数（function）】函数是一个语句，用来完成特定的功能。函数的结构为<code>***()</code>.括号中的内容叫「参数」，可以没有参数也可以有多个参数，中间用逗号隔开。返回的结果叫做「返回值」，同样可以没有返回值。</p>
<p>函数分为</p>
<ol>
<li>内置函数。python解释器提供的，可以在python中直接使用。</li>
<li>自定义函数。由程序员自定义的函数。</li>
</ol>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python的基本语法</title>
    <url>/2024/03/31/python%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<p>python严格区分大小写。比如<code>Print()</code>不能被执行。</p>
<p><strong>语句</strong>不建议过长。一条语句可以多行编写，语句以反斜线<code>\</code>换行。</p>
<p>不要随便写缩进，缩进严格，表示代码块。</p>
<p><code>%</code>后加空格表示注释。</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>一类项目获取环保许可的要求</title>
    <url>/2024/03/29/%E4%B8%80%E7%B1%BB%E9%A1%B9%E7%9B%AE%E8%8E%B7%E5%8F%96%E7%8E%AF%E4%BF%9D%E8%AE%B8%E5%8F%AF%E7%9A%84%E8%A6%81%E6%B1%82/</url>
    <content><![CDATA[<p>一类项目对环境影响很小，且影响不回超过活动地点。需要提交电子申请、附上一般要求中提及的文件并且遵守相关条件。</p>
<p><strong>一般要求</strong></p>
<ol>
<li>填写分类表格（<a href="https://raw.githubusercontent.com/zmz231126/bolgpicture/main/202403291608962.pdf">点击此处下载</a>）</li>
<li>项目简单的初始报告</li>
<li>无害和已经许可的工业垃圾（液体和固体）的搬运和清理合同</li>
<li>与认证机构签署的固体市政垃圾的搬运和清理合同</li>
<li>商业登记证</li>
<li>税务登记证</li>
<li>身份证或者居住证</li>
<li>产权契约或者租赁合同</li>
</ol>
<p><strong>相关条件</strong></p>
<ul>
<li>商会或者合法机构认证的项目所有人的授权书。</li>
</ul>
<p><strong>更新一类环保许可的要求</strong></p>
<ol>
<li>上一阶段环保登记证书</li>
<li>上面要求中的3-8项。</li>
</ol>
<p><a href='https://ncec.gov.sa/%d9%85%d8%aa%d8%b7%d9%84%d8%a8%d8%a7%d8%aa-%d8%a7%d9%84%d8%ad%d8%b5%d9%88%d9%84-%d8%b9%d9%84%d9%89-%d9%85%d9%88%d8%a7%d9%81%d9%82%d8%a9-%d8%a8%d9%8a%d8%a6%d9%8a%d8%a9-%d9%84%d9%84%d9%81%d8%a6%d8%a9'>本文引用自nece网站</a></p>
]]></content>
      <categories>
        <category>制度学习</category>
        <category>沙特环保制度</category>
      </categories>
      <tags>
        <tag>建厂</tag>
        <tag>沙特投资</tag>
        <tag>沙特</tag>
        <tag>沙特环境监察中心</tag>
      </tags>
  </entry>
  <entry>
    <title>沙特办理工业许可证的要求和流程</title>
    <url>/2024/03/28/%E5%8A%9E%E7%90%86%E5%B7%A5%E4%B8%9A%E8%AE%B8%E5%8F%AF%E7%9A%84%E8%A6%81%E6%B1%82/</url>
    <content><![CDATA[<h1 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h1>
<p>沙特工业和矿产资源部提供工业许可证颁发服务，它是本部根据海湾国家合作委员会统一工业管理制度颁发的文件。允许根据特定的流程和机制从事工业项目，从投资者基础建设，施工到生产提供便利。</p>
<h1 id="企业在申请工业许可证时的三个阶段"><a class="markdownIt-Anchor" href="#企业在申请工业许可证时的三个阶段"></a> 企业在申请工业许可证时的三个阶段</h1>
<p>工业企业在申请工业许可时有三个阶段，这三个阶段反映了工业项目的发展情况。每个阶段都需要从相关部门申请必要的工业许可。</p>
<h2 id="基础阶段"><a class="markdownIt-Anchor" href="#基础阶段"></a> 基础阶段</h2>
<p><strong>要求</strong></p>
<ul>
<li>从事工业活动的商业注册证书</li>
<li>在工业平台提交颁发工业许可的服务</li>
<li>立即颁发（不受本部限制的工业活动）</li>
</ul>
<p><strong>特点</strong></p>
<ul>
<li>在工业许可证中注册要生产的产品</li>
<li>可以在负责场地分配的相关机构申请分配场地</li>
<li>可以申请工业贷款</li>
<li><span style='background-color: yellow;'>可以申请配电</span></li>
</ul>
<p>许可证的有效期为一年，可以申请更新。</p>
<h2 id="建设阶段"><a class="markdownIt-Anchor" href="#建设阶段"></a> 建设阶段</h2>
<p><strong>要求</strong></p>
<ul>
<li>从事工业活动的商业注册证书</li>
<li>从能源部分配能源</li>
<li>从分配场地的机构获得地点许可证/合同</li>
<li>环保建设许可证</li>
<li>在工业平台提交阶段升级申请</li>
</ul>
<p><strong>特点</strong></p>
<ul>
<li>在建设阶段提供劳工支持</li>
<li>为机械设备免关税</li>
<li>为零配件免关税</li>
<li>化学品清理</li>
<li>根据法定要求，经该部批准或在合作委员会框架内商定的任何其他福利或豁免</li>
</ul>
<p>许可证的有效期为一年，可以申请更新。</p>
<h2 id="生产阶段"><a class="markdownIt-Anchor" href="#生产阶段"></a> 生产阶段</h2>
<p><strong>要求</strong></p>
<ul>
<li>从事工业活动的商业注册证书</li>
<li>从相关部门获取的安全环保运行证书</li>
<li>在工业平台提交升级申请</li>
<li>从其他相关部门获得的经营要求和许可证，包括经营军工、食品和药品活动。</li>
</ul>
<p><strong>特点</strong></p>
<ul>
<li>为生产阶段提供劳工支持</li>
<li>生产投入品免关税</li>
<li>机械设备免关税</li>
<li>零配件免关税</li>
<li>化学品清理</li>
<li>原产地证书</li>
<li>根据法定要求，经该部批准或在合作委员会框架内商定的任何其他福利或豁免</li>
</ul>
<p>许可证的有效期为五年。</p>
<h1 id="条件"><a class="markdownIt-Anchor" href="#条件"></a> 条件</h1>
<p>申请人必须遵守：</p>
<ul>
<li>海湾国家合作委员会统一工业管理制度中提到了的条款和现行的法规。</li>
<li>每6个月在本部电子网站上更新工厂信息。</li>
<li>允许本部员工进入工业场地审查相关文件和账户，监督生产活动等。</li>
<li>未经本部同意不得扩大、发展、更换产品、工业项目合并或停止工业项目。</li>
<li>允许本部审查企业相关的所有数据并提交给所有政府机构。</li>
<li>只允许在完成工业项目、获得了安全环保许可以及其他部门的要求后进行工业活动和实际生产，然后需要将工业许可证升级到“生产”。</li>
</ul>
<h1 id="颁发许可证所需时间"><a class="markdownIt-Anchor" href="#颁发许可证所需时间"></a> 颁发许可证所需时间</h1>
<p>立即颁发（本部限制的活动除外）</p>
<p><a href="https://mim.gov.sa/mim/services/31393/">本文翻译自工业部网站</a></p>
]]></content>
      <categories>
        <category>制度学习</category>
        <category>沙特工业和矿产资源部制度</category>
      </categories>
      <tags>
        <tag>沙特投资</tag>
        <tag>沙特</tag>
        <tag>工业许可证</tag>
        <tag>沙特工业和矿产资源部</tag>
      </tags>
  </entry>
  <entry>
    <title>变量和标识符</title>
    <url>/2024/03/31/%E5%8F%98%E9%87%8F%E5%92%8C%E6%A0%87%E8%AF%86%E7%AC%A6/</url>
    <content><![CDATA[<p>使用变量不需要声明，直接为变量赋值，但是不能使用未被赋值的变量</p>
<p>python是一个动态类型的语言，可以给变量赋<strong>任意类型的值</strong>。也可以任意修改变量的值。</p>
<p>通常变量的名要有意义，比如年龄18，那么我们可以写<code>age = 18</code></p>
<p>sypder快捷键注释</p>
<ol>
<li>Ctrl + 1	注释/反注释</li>
<li>Ctrl + 4/5	块注释/块反注释</li>
<li>Ctrl + L	跳转到行号</li>
<li>Tab/Shift + Tab	代码缩进/反缩进</li>
<li>Ctrl ＋I	显示帮助</li>
</ol>
<hr />
<p>标识符：html中是名值对，这里是标识符和值成对。</p>
<p>python中所有可以自主命名的内容都是标识符。比如变量名、函数名、类名。</p>
<ol>
<li>标识符只能含有字母、数字、下划线。但是不能用数字开头，一般都是用字母开头。</li>
<li>标识符不能是python关键字和保留字。不建议使用函数名作为标识符。会导致函数被覆盖。</li>
<li>规范：
<ol>
<li>下划线命名法，比如<code>max_length</code>, <code>hello_world</code>（用得最多）</li>
<li>帕斯卡命名法，每个单词开头字母大写，其余小写，比如<code>MaxLength</code>, <code>HelloWorld</code>（类名，使用此类）</li>
<li></li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>spyder快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>土地占用和建筑元素之间的分布比率</title>
    <url>/2024/03/29/%E5%9C%9F%E5%9C%B0%E5%8D%A0%E7%94%A8%E5%92%8C%E5%BB%BA%E7%AD%91%E5%85%83%E7%B4%A0%E4%B9%8B%E9%97%B4%E7%9A%84%E5%88%86%E5%B8%83%E6%AF%94%E7%8E%87/</url>
    <content><![CDATA[<p>土地占用和建筑元素之间的分布比率：</p>
<ol>
<li>最大建设面积和土地面积的比率在50-60%之间波动，最小不低于45%。</li>
<li>交通线、车辆跑道、退线、停车区域、景观区域和装卸区域占占地面地的40-50%。</li>
<li>根据下面的表格，空隙分配在工业建筑之间。</li>
<li>各个单元和仓库的比例可能根据工厂的要求进行修订，使的工业使用率不低于建筑面积的43%<sup>8</sup></li>
<li>容积率（floor area ratio)也就是建筑物和土地面积的比率，不高于1.5.</li>
</ol>
<table>
<thead>
<tr>
<th>表4：</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>场地内建设比率</td>
<td></td>
</tr>
<tr>
<td>土地使用率</td>
<td>比率</td>
</tr>
<tr>
<td>50%</td>
<td>建设比率</td>
</tr>
<tr>
<td>45%≤</td>
<td>最小建设比率</td>
</tr>
<tr>
<td>60%≥</td>
<td>最大建设比率</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>表5:</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>工厂各个面积的分配比率</td>
<td>比率</td>
</tr>
<tr>
<td>工业建筑元素</td>
<td></td>
</tr>
<tr>
<td>生产</td>
<td>40-60%（随工厂规模的增大而减小）</td>
</tr>
<tr>
<td>仓库</td>
<td>30-40%（随工厂规模的扩大而增大）</td>
</tr>
<tr>
<td>管理（可选）</td>
<td>7-15%（随工厂规模的扩大而增大）</td>
</tr>
<tr>
<td>员工服务</td>
<td>3-5%（随工厂规模的扩大而增大）</td>
</tr>
</tbody>
</table>
<blockquote>
<p>[!CAUTION]</p>
<p>这个比率是土地允许使用的面积，不是土地的总面积。</p>
</blockquote>
]]></content>
      <categories>
        <category>制度学习</category>
        <category>沙特工业园制度</category>
      </categories>
      <tags>
        <tag>建厂</tag>
        <tag>沙特投资</tag>
        <tag>沙特</tag>
        <tag>沙特工业园</tag>
      </tags>
  </entry>
  <entry>
    <title>字符串</title>
    <url>/2024/03/31/%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<ul>
<li>字符串用来表示文本信息, 是使用最多的数据类型. 必须用引号包围, 可以理解成某人说:“”.</li>
<li>单引号双引号都可以, 但是不可以混合使用. 但是相同的引号不可以嵌套, 但是不同的引号可以嵌套. 下边就是不用引号的嵌套</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c = <span class="string">&quot;子曰:&#x27;学而时习之, 不亦说乎&#x27;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>
<ul>
<li>引号不可以跨行使用, 需要跨行使用<code>\</code>. 注意: 这里跟<code>\n</code>的区别. 单纯的<code>\</code>只是告诉解析器我代码要换行写了, 不影响字符格式.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;锄禾日当午, \</span></span><br><span class="line"><span class="string">汗滴禾下土, \</span></span><br><span class="line"><span class="string">谁知盘中餐, \</span></span><br><span class="line"><span class="string">粒粒皆辛苦.&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure>
<p>此时返回</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">锄禾日当午, 汗滴禾下土, 谁知盘中餐, 粒粒皆辛苦.</span><br></pre></td></tr></table></figure>
<ul>
<li>如果要保留, 原字符串的格式, 可以使用三个引号, 三个引号可以直接跨行使用, 而且保留字符串的格式.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;&#x27;&#x27;锄禾日当午,</span></span><br><span class="line"><span class="string">行滴禾下土,</span></span><br><span class="line"><span class="string">谁知盘中餐,</span></span><br><span class="line"><span class="string">粒粒皆辛苦.&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure>
<p>此时返回值为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">锄禾日当午,</span><br><span class="line">行滴禾下土,</span><br><span class="line">谁知盘中餐,</span><br><span class="line">粒粒皆辛苦.</span><br></pre></td></tr></table></figure>
<ul>
<li>转义字符, 比如在字符串内嵌套相同的引号是不允许的, 但是可以使用转义字符,将没有语法意义的引号转义, 告诉解析器, 他就单纯是一个字符而已, 不是一个字面量.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c = <span class="string">&quot;子曰:\&quot;学而时习之, 不亦说乎\&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>
<p>返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">子曰:&quot;学而时习之, 不亦说乎&quot;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>\n</code>表示换行符</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;锄禾日当午,\n汗滴禾下土,\n谁知盘中餐,\n粒粒皆辛苦.&#x27;</span> </span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure>
<p>返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">锄禾日当午,</span><br><span class="line">汗滴禾下土,</span><br><span class="line">谁知盘中餐,</span><br><span class="line">粒粒皆辛苦.</span><br></pre></td></tr></table></figure>
<ul>
<li><code>\t</code>表示制表符</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">w = <span class="string">&#x27;学而时习之,\t不亦说乎&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(w)</span><br></pre></td></tr></table></figure>
<p>返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">学而时习之,	不亦说乎</span><br></pre></td></tr></table></figure>
<ul>
<li><code>\uxxx</code>表示Unicode编码. 通过这种方式可以打印一些特殊符号.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">&#x27;\u0040&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure>
<p>返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>字符串的复制</title>
    <url>/2024/03/31/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%A4%8D%E5%88%B6/</url>
    <content><![CDATA[<p>将字符串和数字相乘, 就是复制字符串</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">&#x27;你好&#x27;</span></span><br><span class="line"></span><br><span class="line">a = a * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure>
<p>返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">你好你好</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>字面变量和变量</title>
    <url>/2024/03/31/%E5%AD%97%E9%9D%A2%E9%87%8F%E5%92%8C%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<p>【字面量】一个一个的值，它的意思就是它字面的值。在程序中可以直接使用。</p>
<p>【变量】与字面量相反。变量可以保存字面量，并且保存的字面量是不定的。</p>
<p>变量本身无意义，会跟不同的字面量表示不同的意思。</p>
<p>开发时，通常将字面量保存在变量中，通过变量来引用字面量。这样便于统一管理和引用。</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>计算机</tag>
      </tags>
  </entry>
  <entry>
    <title>对象(object)</title>
    <url>/2024/03/31/%E5%AF%B9%E8%B1%A1(object)/</url>
    <content><![CDATA[<h1 id="对象介绍"><a class="markdownIt-Anchor" href="#对象介绍"></a> 对象介绍</h1>
<p>Python是一个面向对象的语言. 一切皆对象.<br />
程序运行中, 所有的数据都是存储在内存中, 硬盘–&gt;内存–&gt;CPU.<br />
对象就是内存中专门用来存储指定数据的区域. 对象实际上就是一个容器.<br />
数值，字符串, None都是对象</p>
<h1 id="对象结构"><a class="markdownIt-Anchor" href="#对象结构"></a> 对象结构</h1>
<p>每个对象都有三个部分</p>
<ul>
<li>id<br />
用来标识对象的唯一性, 相当于人的身份证号.<br />
可以通过函数<code>id()</code>来查看对象的id<br />
对象一经创建, id就是无法改变了.</li>
<li>type<br />
当前对象所属的类型, 类型决定了对象的功能. 比如自行车那它有什么功能, 牛有哪些功能.<br />
<code>type()</code>查看类型<br />
同样, 类型同样无法更改</li>
<li>value<br />
对象所存储的数据.<br />
我们平时直接看到的就是对象的值. id和type要用函数才能看到.<br />
值有些对象能改变, 有些不能改变.</li>
</ul>
<h1 id="变量和对象"><a class="markdownIt-Anchor" href="#变量和对象"></a> 变量和对象</h1>
<p>a = 3<br />
这里的’3’是一个对象, 它有上部分提到的三部分构成. 对象并不是存储在变量中, 变量更像是对象的一个别名.<br />
变量中存储的是对象的id, 当我们使用变量时, 解析器根据id去寻找对象.</p>
<h1 id="类型转换"><a class="markdownIt-Anchor" href="#类型转换"></a> 类型转换</h1>
<p>类型转换不是改变对象本身的类型, 而是根据当前对象的值创建新的对象.<br />
三个函数;</p>
<ul>
<li><code>int()</code>
<ul>
<li>浮点数会直接取整, 没有四舍五入;</li>
<li>True --&gt; 1; False --&gt; 0;</li>
<li>整数的数据直接转换成整数, 不是整数字符串(11.5, None, Hello)会报错.</li>
</ul>
</li>
<li><code>float()</code>
<ul>
<li>跟<code>int()</code>类似, 但是会将数据转换成浮点数<br />
<code>str()</code>,</li>
<li>什么都可以, 只不过转换成了字符串<br />
<code>bool()</code></li>
<li>什么都可以, 转换成Ture或者Flase. 所有空性数据会转成Flase, 其他的会转成True</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>布尔值</title>
    <url>/2024/03/31/%E5%B8%83%E5%B0%94%E5%80%BC/</url>
    <content><![CDATA[<p>布尔值(bool)用来做逻辑判断. 一共有两个<code>True</code>和<code>False</code>. 注意Python是一个大小写敏感的语言.<br />
也可以理解为一个整数, true 是 1 false 是 0</p>
<p><code>None</code>空值,表示不存在.</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>数值</title>
    <url>/2024/03/31/%E6%95%B0%E5%80%BC/</url>
    <content><![CDATA[<p>数据类型：就是给变量赋的值的类型。</p>
<ul>
<li>数值
<ul>
<li>整数</li>
<li>布尔值</li>
<li>浮点数</li>
<li>复数</li>
</ul>
</li>
</ul>
<ul>
<li>字符串</li>
<li>空值<br />
编程语言是人创造的，学习的时候要关联现实生活，这样容易理解。</li>
</ul>
<p>python 数值有三种：</p>
<ul>
<li>整数（int）
<ul>
<li>数大小没有限制，可以是任意大小。</li>
<li>如果数字过长，我们可以用<code>_</code>作为分隔符，比如<strong>千位分隔符</strong>。</li>
</ul>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c = <span class="number">123_456_789</span></span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>
<p>返回值为:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123456789</span><br></pre></td></tr></table></figure>
<p>数字不能以<code>0</code>开头。<br />
二进制数字用<code>0b</code>开头<br />
八进制数字用<code>0o</code>开头<br />
十六进制数字用<code>0x</code>开头<br />
任何进制的数字返回的都是十进制的数字</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">e = <span class="number">0b10</span></span><br><span class="line"><span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure>
<p>返回值为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<ul>
<li>浮点数（小数）<br />
所有的小数都是浮点数, 对浮点数的计算可能不准确.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c = <span class="number">0.1</span> + <span class="number">0.2</span></span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>
<p>返回值为:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.30000000000000004</span><br></pre></td></tr></table></figure>
<p>所有不建议对浮点数进行直接运算.</p>
<ul>
<li>复数</li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>文本文件和字符集</title>
    <url>/2024/03/31/%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E5%92%8C%E5%AD%97%E7%AC%A6%E9%9B%86/</url>
    <content><![CDATA[<p>文本分为纯文本和富文本。</p>
<p>纯文本在计算机底层也会转换为二进制保存。</p>
<p>将字符转换为二进制码的过程叫做<strong>编码</strong>。</p>
<p>将二进制码转换成字符的过程叫做<strong>解码</strong>。</p>
<p>编码和解码时采用的规则叫做<strong>字符集</strong>。</p>
<p>常用的字符集：</p>
<ul>
<li>ASCII 美国人编码，使用7位（7个1和7个0）来对美国常用的字符进行编码。7个1和7个0的不同组合产生128个字符。</li>
<li>IS0-8859-1 欧洲的编号，使用8位进行编码，产生256个字符。</li>
<li>GB2312 GBK中国人的编码</li>
<li>Unicode 万国码。便携程序时，使用Unicode编码。Unicode有多种实现，UTF-32使用4个字节表示一个字符。UTF-16使用2到4个字节表示一个字符。UTF-8使用1-5个字节表示一个字符。</li>
</ul>
<hr />
<p>乱码</p>
<p>程序出现乱码，检查字符集是否正确。</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>计算机</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2024/03/26/%E6%97%A0%E7%BA%BA%E5%B8%83%E4%B8%93%E4%B8%9A%E8%8B%B1%E8%AF%AD%E6%9C%AF%E8%AF%AD1/</url>
    <content><![CDATA[<p>聚酯切片：</p>
<p>淀粉：</p>
<p>丙烯酸胶：</p>
<p>玻纤纱：</p>
<p>针刺机：</p>
<p>涤纶纺粘胎基布：</p>
<p>免税通过海关：free of duty through customs</p>
<p>钢结构：steel structure</p>
<p>钢筋：rebar /ˈriːˌbɑːr/</p>
<p>电缆：electrical cable</p>
<p>电子元器件：electron component /ɪˈlektrɑːn/</p>
<p>进口材料：imported material</p>
<p>外商独资项目：wholly foreign owned enterprise</p>
<p>全资子公司：subsidiary of solo investment</p>
<p>进口材料及设备占投资金额的比例限制是多少？<br />
What is the <strong>limit</strong> <strong>on</strong> the proportion of imported materials and equipment <strong>in</strong> the investment amount？</p>
<p>型钢：structural steel</p>
<p>圆钢：round steel</p>
<p>角钢：angle steel</p>
<p>工型钢：universal beams</p>
<p>槽型钢：channel steel</p>
<p>六角钢：hexagonal steel</p>
<p>扁钢：flat steel</p>
<p>矩形：rectangle</p>
<p>无缝管：seamless tube</p>
<p>备案手续：recordation formalities of relevant documents</p>
<p>示范合同、标准合同：model contract /ˈmɑːd(ə)l/</p>
<p>特种作业人员：special appliance operator</p>
<p>电工：electrician</p>
<p>焊工：welder</p>
]]></content>
  </entry>
  <entry>
    <title>格式化字符串</title>
    <url>/2024/03/31/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h1 id="字符串之间可以进行加法运算-但是不能和其他数据进行加法运算"><a class="markdownIt-Anchor" href="#字符串之间可以进行加法运算-但是不能和其他数据进行加法运算"></a> 字符串之间可以进行加法运算, 但是不能和其他数据进行加法运算</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">&#x27;Ken&#x27;</span></span><br><span class="line">b = <span class="string">&#x27; how are you&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(a + b)</span><br></pre></td></tr></table></figure>
<p>返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Ken how are you</span><br></pre></td></tr></table></figure>
<h1 id="在创建字符串时候-可以在字符串中制定占位符s"><a class="markdownIt-Anchor" href="#在创建字符串时候-可以在字符串中制定占位符s"></a> 在创建字符串时候, 可以在字符串中制定占位符<code>%s</code></h1>
<p><code>%s&quot;%Ken&quot;</code>这里我们用Ken填充占位符<code>%s</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">b = <span class="string">&quot;Hello %s&quot;</span> %<span class="string">&#x27;Ken&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure>
<p>返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello Ken</span><br></pre></td></tr></table></figure>
<p>这里注意: 在字符串外部对占位符进行填充, 填充的字符用引号包围.</p>
<p>字符串中有多个占位符时候, 后边也要用多个字符进行依次填充.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c = <span class="string">&quot;Hello %s,你好 %s&quot;</span> %(<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;孙悟空&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>
<p>返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello Tom,你好 孙悟空</span><br></pre></td></tr></table></figure>
<p><code>%3s</code>表示, 要填充的字符串最少是3个字符, 少于3个字符用空格补齐. <code>%3.5</code>表示填充的字符必须是3到5个, 多余5个舍去, 少于3个用空格补齐.<br />
要注意, 占位符可以用字符串填充, 也可以用数值填充, <b>也可以用变量填充</b>.</p>
<h1 id="专业的浮点数占位符是f这个占位符可以对数值的小数进行精确控制"><a class="markdownIt-Anchor" href="#专业的浮点数占位符是f这个占位符可以对数值的小数进行精确控制"></a> 专业的浮点数占位符是<code>%f</code>,这个占位符可以对数值的小数进行精确控制.</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">&quot;Hello, %.2f&quot;</span> %<span class="number">123.4</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure>
<p>返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello, 123.40</span><br></pre></td></tr></table></figure>
<p>这里<code>.2f</code>就是保留两个小数, 而且会自动四舍五入.</p>
<h1 id="整数占位符是d-它是没有四舍五入的"><a class="markdownIt-Anchor" href="#整数占位符是d-它是没有四舍五入的"></a> 整数占位符是<code>%d</code>, 它是没有四舍五入的.</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">b = <span class="string">&quot;Hello, %d&quot;</span> %<span class="number">123.456</span></span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure>
<p>返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123</span><br></pre></td></tr></table></figure>
<h1 id="格式化字符串-b格式化字符串中可以嵌入变量b-变量用包围-格式化字符串的方法是在字符串前加一个f"><a class="markdownIt-Anchor" href="#格式化字符串-b格式化字符串中可以嵌入变量b-变量用包围-格式化字符串的方法是在字符串前加一个f"></a> 格式化字符串, <b>格式化字符串中可以嵌入变量</b>, 变量用<code>&#123;&#125;</code>包围. 格式化字符串的方法是在字符串前加一个<code>f</code>.</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">123</span></span><br><span class="line">b = <span class="string">&#x27;呵呵&#x27;</span></span><br><span class="line"></span><br><span class="line">c = <span class="string">f&quot;hello <span class="subst">&#123;a&#125;</span> <span class="subst">&#123;b&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">print</span>(c) </span><br></pre></td></tr></table></figure>
<p>返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hello 123 呵呵</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>申请沙特工业园工厂运行许可证的要求</title>
    <url>/2024/03/27/%E6%B2%99%E7%89%B9%E5%B7%A5%E4%B8%9A%E5%9B%AD%E5%B7%A5%E5%8E%82%E8%BF%90%E8%A1%8C%E8%AE%B8%E5%8F%AF%E8%AF%81%E7%9A%84%E8%A6%81%E6%B1%82%E5%92%8C%E8%A7%84%E5%AE%9A/</url>
    <content><![CDATA[<h1 id="第一阶段通过modon账户提交申请"><a class="markdownIt-Anchor" href="#第一阶段通过modon账户提交申请"></a> 第一阶段：通过MODON账户提交申请</h1>
<p><strong>申请建筑竣工和运行许可证所需文件</strong></p>
<ul>
<li>经Modon认证的安全图。</li>
<li>绝缘工程完工证明。</li>
<li>测试安全系统的模型和消防警报器材的清单。</li>
<li>电路铺设和连接安全证书。</li>
<li>跟分包商签署的消防警报系统维护的合同，分包商需要经过民防的认证。</li>
<li>环保证书。</li>
<li>工业许可证（从工业与矿产资源部网站申请）</li>
<li>军工单位建设许可和安全等级（军工企业适用）</li>
</ul>
<p><strong>运行许可证更新所需文件</strong></p>
<ul>
<li>经工业园（MODON）和民防（Civil Defense）认证的设施安全图纸。</li>
<li>跟分包商签署的消防警报系统维护的合同，分包商需要经过民防的认证。</li>
<li>测试安全系统的模型和消防警报器材的清单。</li>
<li>合格且有级别的安全员。</li>
</ul>
<p><strong>其他条件</strong></p>
<ul>
<li>跟由Modon认证的工程办公室签订合同，由工程办公室根据认证的模版检查消防和安全系统。</li>
<li>通过Shareek系统申报危险材料，说明在企业内危险品的存储、种类和危害性。</li>
<li>职业健康和安全领域内合格的安全员。</li>
<li>企业安保人员：有安保（沙特籍）</li>
<li>企业内外安装可以存储两个月记录的摄像头。（军工单位适用）</li>
<li>记录和保存出入数据（员工和拜访人员）的控制系统。（军工企业适用）</li>
</ul>
<h1 id="第二阶段参观考察"><a class="markdownIt-Anchor" href="#第二阶段参观考察"></a> 第二阶段：参观考察</h1>
<p><strong>批准颁发建筑竣工和运行许可或者更新作业许可证和安全标准需要检查的内容</strong></p>
<ul>
<li>确保与许可证相符。</li>
<li>确保消防和疏散系统运行良好且与主控制面板连接。</li>
<li>确保消防和疏散系统与认证的安全图纸相符，与认证的规格相符。</li>
<li>确保有安全员进行与安全管理相关的工作。</li>
<li>检查员工办公地点和基础设施。</li>
<li>确保企业内部的生产线、电力系统和设备和其他设备的安全。</li>
<li>确保地板、通风系统和噪声安全。</li>
<li>确保在处理、运输和储存化学材料和有害气体时，符合安全规定。</li>
<li>确保不存在不安全或者违规存储，和不符合规定的退线。</li>
</ul>
<h1 id="第三阶段颁发竣工证书和运行许可证"><a class="markdownIt-Anchor" href="#第三阶段颁发竣工证书和运行许可证"></a> 第三阶段：颁发竣工证书和运行许可证</h1>
<p>Modon致力于简化并加速与合作伙伴的合作，其中包括满足工厂需求，保护员工和工业园财产与基础。我们已经对运行许可和有效时限做了如下分类：</p>
<p><strong>第一次发放期限一年</strong><br />
对那些完成建设，满足条件，符合安全标准的企业发放我竣工和运行许可证，它可以视为是运行许可证，此许可证有效期为一年。</p>
<p><strong>更新</strong></p>
<p>【短期】：6个月</p>
<p>本许可颁发给那些些存在大量问题和违规行为，需要较长时间跟其他政府部门和相关机构完成手续，并能够快速更正错误，承诺在规定时间纠正其他问题的企业</p>
<p>【中期】：1年</p>
<p>本许可颁发给那些存在中等风险的违规行为，需要较长时间与其他政府部门和相关机构对接完成相关手续。前提是尽快纠正错误，并承诺在规定时间能纠正问题的企业。</p>
<p>【长期】：3年</p>
<p>三年有效期的许可颁发给那些没有任何问题，已经遵守了所有安全规则和标准。</p>
<p><a href='https://www.modon.gov.sa/ar/Systems/Pages/Conditions.aspx'>本文翻译自Modon网站</a></p>
]]></content>
      <categories>
        <category>制度学习</category>
        <category>沙特工业园制度</category>
      </categories>
      <tags>
        <tag>沙特投资</tag>
        <tag>沙特</tag>
        <tag>沙特工业园</tag>
        <tag>工厂运营许可</tag>
      </tags>
  </entry>
  <entry>
    <title>沙特工业园建厂要求</title>
    <url>/2024/03/28/%E6%B2%99%E7%89%B9%E5%B7%A5%E4%B8%9A%E5%9B%AD%E5%BB%BA%E5%8E%82%E8%A6%81%E6%B1%82/</url>
    <content><![CDATA[<p>工厂需要遵循【建厂条件和标准指南】中的建厂要求，可以享受Modon在工业园中提供的服务。</p>
<ul>
<li>工厂建设的单元包括：生产车间、原材料仓库、产成品仓库、员工服务、电力供应、工业安全服务、内部道路、疏散区域、<br />
管理建筑。</li>
<li>生产车间的高度满足所有任务需求，其中包括根据不同生产类型的生产线所需要的机械作业任务。</li>
<li>原材料仓库的面积限制在能满足工厂需要的30%-40%，随工厂规模（建筑面积）的增大而增大。</li>
<li>产成品仓库的面积限制在满足工厂产品存储的30%-40%，随工厂规模（建筑面积）的增大而增大。</li>
<li>工厂员工服务包括：卫生间、礼拜厅、急救、餐厅、换衣间。</li>
<li>包括给工厂服务的管理办公室。</li>
<li>供电工程包括中低压配电室和主断路器室。</li>
<li>安全服务包括：备用消防箱、灭火系统和火灾警报系统。</li>
<li>内部道路用来方便工厂不同单元的活动，并且连接工厂各个入口和主道路。</li>
<li>生产建筑和围墙之间的间隔：前方与道路之间不低于13.5米，与两侧和后方之间不低于6米。</li>
<li>申请、认证和颁发许可证的要求。</li>
</ul>
<p><a href='https://www.modon.gov.sa/ar/Systems/Pages/Requirements.aspx'>内容采集自工业园官网</a></p>
]]></content>
      <categories>
        <category>制度学习</category>
        <category>沙特工业园制度</category>
      </categories>
      <tags>
        <tag>建厂</tag>
        <tag>沙特工业园</tag>
      </tags>
  </entry>
  <entry>
    <title>沙特工业园投资流程</title>
    <url>/2024/03/27/%E6%B2%99%E7%89%B9%E5%B7%A5%E4%B8%9A%E5%9B%AD%E6%8A%95%E8%B5%84%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="工业园提供的产品和服务"><a class="markdownIt-Anchor" href="#工业园提供的产品和服务"></a> 工业园提供的产品和服务</h1>
<ol>
<li>工业用地：Modon在沙特全境提供工业用地，满足工业投资者的需求。</li>
<li>现成工厂：Modon提供不同面积且服务完备的现成工厂，支持中小企业和男女企业家。</li>
<li>融资方案：Modon提供多种融资方案，支持投资者的工业发展简化他们获取工业产品的流程。</li>
</ol>
<h1 id="申请前"><a class="markdownIt-Anchor" href="#申请前"></a> 申请前</h1>
<h4 id="获得工业产品的条件"><a class="markdownIt-Anchor" href="#获得工业产品的条件"></a> 获得工业产品的条件</h4>
<ol>
<li>从工商局网站获得的工业活动注册证书。</li>
<li>通过Shareek申请产品。</li>
</ol>
<h4 id="申请产品"><a class="markdownIt-Anchor" href="#申请产品"></a> 申请产品</h4>
<ol>
<li>填写申请表格：在表格中附上所需文件。</li>
<li>面谈：跟投资者进行面谈，讨论合作关系和工业项目的关键活动领域。</li>
<li>产品预览：拜访工业园总部，预览产品并填写预览表。</li>
<li>签署合同接受产品：在表格中附上所需文件。</li>
</ol>
<h1 id="建设阶段"><a class="markdownIt-Anchor" href="#建设阶段"></a> 建设阶段</h1>
<ol>
<li>建设咨询办公室的许可：通过Modon中的Shareek门户获取报价，研究建设咨询办公室的要求，认可报价后回去同意。可以通过网站获得咨询公司名单。</li>
<li>图纸审批：通过Shareek门户上的电子服务平台，咨询办公室根据工业园指导和建设要求，认证主规划和安全规划。</li>
<li>发出建设许可：通过Shareek门户上的电子服务平台，获得在工业园内进行建设作业的许可证书。</li>
<li>申请用电：通过Shareek门户提交用电申请，沙特电力公司进行作业。</li>
<li>现场跟进：Modon对在建工厂进行现场检查，确保建设符合Modon的标准和条件。</li>
<li>发出竣工证明和运行许可：竣工证书旨在确保企业符合Modon的建设标准和条件，此为第一次发出。</li>
<li>运行许可证：这是企业运行的许可，需要定期更新。</li>
</ol>
<h1 id="运行"><a class="markdownIt-Anchor" href="#运行"></a> 运行</h1>
<p>在发出竣工证明和运行许可，并且确保企业安全作业以后，工厂可以开始生产制造。</p>
<h4 id="电子服务"><a class="markdownIt-Anchor" href="#电子服务"></a> 电子服务</h4>
<p>在开始运行以后，企业可以通过Shareek门户上通过电子服务使用工业园提供的服务：</p>
<ul>
<li>合同管理服务</li>
<li>信件服务</li>
<li>许可服务</li>
<li>证书服务</li>
<li>供应商服务</li>
<li>工程咨询办公室服务</li>
<li>票据和投诉</li>
</ul>
<h4 id="定期跟踪"><a class="markdownIt-Anchor" href="#定期跟踪"></a> 定期跟踪</h4>
<p>Modon对工厂进行定期检查，确保工厂符合安全规定，并且保护员工安全。</p>
<p><a href='https://raw.githubusercontent.com/zmz231126/bolgpicture/main/202403291018552.pdf'>点击这里查看原文档</a></p>
]]></content>
      <categories>
        <category>制度学习</category>
        <category>沙特工业园制度</category>
      </categories>
      <tags>
        <tag>建厂</tag>
        <tag>沙特投资</tag>
        <tag>沙特工业园</tag>
      </tags>
  </entry>
  <entry>
    <title>mermaid 流程图练习</title>
    <url>/2024/03/27/%E6%B5%81%E7%A8%8B%E5%9B%BE/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">   a --&gt; b &amp; c--&gt; d</span><br></pre></td></tr></table></figure>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: equation at position 7: \begin{̲e̲q̲u̲a̲t̲i̲o̲n̲}̲ \label{eq2}
\b…'>\begin{equation} \label{eq2}
\begin{aligned}
a &amp;= b + c \\
  &amp;= d + e + f + g \\
  &amp;= h + i
\end{aligned}
\end{equation}</p>
<span>
$$
\begin{pmatrix}  
  a_{11} & a_{12} & a_{13} \\  
  a_{21} & a_{22} & a_{23} \\  
  a_{31} & a_{32} & a_{33}  
\end{pmatrix} 
$$
</span>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: equation at position 7: \begin{̲e̲q̲u̲a̲t̲i̲o̲n̲}̲
1 \ne b
\end{e…'>\begin{equation}
1 \ne b
\end{equation}
</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>1</mn><mo mathvariant="normal">≠</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">1 \ne b
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span></span></p>
<p>$ 1 \ne b $<br />
<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo mathvariant="normal">≠</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">1 \ne b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span></p>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden>
  pie
    title Key elements in Product X
    &quot;Calcium&quot; : 42.96
    &quot;Potassium&quot; : 50.05
    &quot;Magnesium&quot; : 10.01
    &quot;Iron&quot; :  5
  </pre></div>
<p><a href='https://raw.githubusercontent.com/zmz231126/bolgpicture/main/202403282015711.pdf'>发票</a></p>
]]></content>
      <tags>
        <tag>练习</tag>
      </tags>
  </entry>
  <entry>
    <title>环境变量</title>
    <url>/2024/03/31/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<p>环境变量（enviroment variable）指的是操作系统当中的一些变量。<em>主要用来配置一些路径。</em></p>
<p>比如操作系统允许我们把文件存在电脑上的任意盘符。 那么需要创建一个环境变量比如说abc，a用户把文件存储到了C盘，那么abc=C。b用户把文件存储到了D盘，那么abc=D。系统在运行的时候，只需要找abc就可以了。</p>
<ol>
<li>
<p>查看变量</p>
<ol>
<li>用户环境变量→仅对当前用户起作用</li>
<li>系统环境变量→对所有用户起作用</li>
</ol>
</li>
<li>
<p>添加环境变量</p>
<p>变量可以有多个值，各个值之间用<code>;</code>隔开。</p>
</li>
<li>
<p>删除环境变量</p>
</li>
</ol>
<hr />
<p>示例：打开终端。</p>
<p>- 输入<code>pwd</code>回车，查看当前所处的文件夹路径。</p>
<p>- 输入<code>ls</code>列出此文件夹下内所有的文件夹。</p>
<p>- 输入<code>cd空格紧跟文件夹名称</code>进入指定的文件夹。<em>必须一步一步指定不能跳级指定文件夹。但是可以书写路径指定<code>cd tmp/tmp1</code>直接指定到tmp1文件夹。</em></p>
<p>- 输入<code>mkdir 空格紧跟新建文件夹名称</code>创建文件夹。*不能同时创建父子目录，如需同时创建多层级目录，请使用<code>mkdir -p</code>比如<code>mkdir -p tmp/tmp1/tmp11</code></p>
<p>- 输入<code>rmdir 空格紧跟文件夹名称</code>删除文件夹。</p>
<p>- 输入<code>cd ..</code>返回上一级目录。</p>
<p>- 输入<code>open tmp.txt</code>打开当前所处文件夹下的tmp.txt文档。<em>同样不能越级打开。</em></p>
<hr />
<p>当我们在命令行输入一个命令（或者访问一个文件时）系统首先在当前目录寻找，如果没有找到，就会进入到path环境变量中寻找。都没有找到才会报错。</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Mac终端命令</tag>
        <tag>环境变量</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2024/03/30/%E7%94%B3%E8%AF%B7%E5%B7%A5%E4%B8%9A%E5%9B%AD%E5%8A%A8%E5%B7%A5%E8%AE%B8%E5%8F%AF/</url>
    <content><![CDATA[<h1 id="申请工业园动工许可"><a class="markdownIt-Anchor" href="#申请工业园动工许可"></a> 申请工业园动工许可</h1>
<h2 id="第一步"><a class="markdownIt-Anchor" href="#第一步"></a> 第一步</h2>
<h3 id="注册shareek门户取得id"><a class="markdownIt-Anchor" href="#注册shareek门户取得id"></a> 注册shareek门户取得ID</h3>
<h3 id="获取调研阶段工业许可"><a class="markdownIt-Anchor" href="#获取调研阶段工业许可"></a> 获取调研阶段工业许可</h3>
<h2 id="第二步"><a class="markdownIt-Anchor" href="#第二步"></a> 第二步</h2>
<h3 id="土地租赁"><a class="markdownIt-Anchor" href="#土地租赁"></a> 土地租赁</h3>
<h3 id="申请分配能源"><a class="markdownIt-Anchor" href="#申请分配能源"></a> 申请分配能源</h3>
<h2 id="第三步"><a class="markdownIt-Anchor" href="#第三步"></a> 第三步</h2>
<h3 id="等待盈科完成公司注册流程"><a class="markdownIt-Anchor" href="#等待盈科完成公司注册流程"></a> 等待盈科完成公司注册流程</h3>
<ul>
<li>
<p>税务</p>
</li>
<li>
<p>劳动局及其相关的电子系统</p>
</li>
<li>
<p>总经理居住证</p>
</li>
</ul>
<h3 id="工业园认证的consulting-engineer-office签合同"><a class="markdownIt-Anchor" href="#工业园认证的consulting-engineer-office签合同"></a> 工业园认证的consulting engineer office签合同</h3>
<h3 id="完成主图纸和安全图纸设计认证"><a class="markdownIt-Anchor" href="#完成主图纸和安全图纸设计认证"></a> 完成主图纸和安全图纸设计认证</h3>
<h2 id="第四步"><a class="markdownIt-Anchor" href="#第四步"></a> 第四步</h2>
<h3 id="跟认证的垃圾搬运公司签合同"><a class="markdownIt-Anchor" href="#跟认证的垃圾搬运公司签合同"></a> 跟认证的垃圾搬运公司签合同</h3>
<h3 id="申请环保动工许可"><a class="markdownIt-Anchor" href="#申请环保动工许可"></a> 申请环保动工许可</h3>
<h2 id="第五步"><a class="markdownIt-Anchor" href="#第五步"></a> 第五步</h2>
<h3 id="申请工业部动工许可"><a class="markdownIt-Anchor" href="#申请工业部动工许可"></a> 申请工业部动工许可</h3>
<ul>
<li>设备进口免关税</li>
</ul>
<h3 id="申请工业园动工许可-2"><a class="markdownIt-Anchor" href="#申请工业园动工许可-2"></a> 申请工业园动工许可</h3>
<h2 id="第六步"><a class="markdownIt-Anchor" href="#第六步"></a> 第六步</h2>
<h3 id="安排安全员"><a class="markdownIt-Anchor" href="#安排安全员"></a> 安排安全员</h3>
<h3 id="安排安保"><a class="markdownIt-Anchor" href="#安排安保"></a> 安排安保</h3>
<h3 id="安排有资质的建筑公司动工"><a class="markdownIt-Anchor" href="#安排有资质的建筑公司动工"></a> 安排有资质的建筑公司动工</h3>
]]></content>
  </entry>
  <entry>
    <title>类型检查</title>
    <url>/2024/03/31/%E7%B1%BB%E5%9E%8B%E6%A3%80%E6%9F%A5/</url>
    <content><![CDATA[<h1 id="数据类型有"><a class="markdownIt-Anchor" href="#数据类型有"></a> 数据类型有</h1>
<ul>
<li>数值
<ul>
<li>整数</li>
<li>布尔值</li>
<li>浮点数</li>
<li>复数</li>
</ul>
</li>
<li>字符串</li>
<li>空值</li>
</ul>
<h1 id="我们通过type函数来检查值的类型-但是注意-该函数会讲返回的结果作为返回值返回-可以通过变量来接受返回值"><a class="markdownIt-Anchor" href="#我们通过type函数来检查值的类型-但是注意-该函数会讲返回的结果作为返回值返回-可以通过变量来接受返回值"></a> 我们通过<code>type()</code>函数来检查值的类型, 但是注意, 该函数会讲返回的结果作为返回值返回, 可以通过变量来接受返回值.</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">&#x27;你好&#x27;</span></span><br><span class="line">b = <span class="built_in">type</span>(a)</span><br><span class="line"><span class="comment"># 或者print(type(a))</span></span><br><span class="line"><span class="comment"># 或者print(type(&#x27;你好&#x27;))</span></span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure>
<p>返回值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;class &#x27;str&#x27;&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>编译型语言和解释型语言</title>
    <url>/2024/03/31/%E7%BC%96%E8%AF%91%E5%9E%8B%E8%AF%AD%E8%A8%80%E5%92%8C%E8%A7%A3%E9%87%8A%E5%9E%8B%E8%AF%AD%E8%A8%80/</url>
    <content><![CDATA[<p>任何语言在交给计算机执行时，必须转换为机器码。根据转换时机的不同，语言分为两大类：</p>
<ul>
<li>编译型语言：会在代码执行前将代码编译为机器码，然后交给计算机执行。执行速度快，跨平台型差。</li>
<li>解释性语言：不会在执行前对代码进行编译，而是在执行的同时一边执行一边编译。跨平台型好。执行速度慢。</li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机简介</title>
    <url>/2024/03/31/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<p>计算机是一个用来进行计算的<strong>机器</strong>，跟生活中其他机器不同的点在于计算机是用来<strong>计算</strong>的。</p>
<p>目前计算机只能根据人类的指令进行操作。我们所学计算机，就是学习如何去进行控制这台机器。</p>
<p>计算机包含硬件和软件两部分：</p>
<ul>
<li>
<p>硬件：看得见摸得着的鼠标键盘、主板、内存、硬盘。它相当于人的身体器官。</p>
</li>
<li>
<p>软件：看的见摸不着的。软件包含：</p>
<ul>
<li>系统软件：Windows，Linux，macOS等。</li>
<li>应用软件：Office，QQ，王者荣耀等。</li>
</ul>
<p>负责计算机的运行。人器官完好也有可能是个死人。</p>
</li>
</ul>
<p>我们需要通过<strong>软件</strong>操作计算机。但是软件中不是所有的功能都会对用户开放，用户需要调取软件的接口/交互界面（interface）来操作计算机。有允许用户调取的接口（用户界面），有不允许用户调取的接口。</p>
<p>用户界面包括：TUI（文本交互界面）比如Mac的Terminal，GUI（图形交互界面）正常操作的界面。</p>
<p>我们学习编程就要学习通过TUI操作软件进行控制计算机。</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>计算机简介</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机语言</title>
    <url>/2024/03/31/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<p>计算机语言其实和人类语言没有本质区别，知识交流主体不同。</p>
<p>机器语言发展的三个阶段：</p>
<ul>
<li>机器语言：通过二进制编码来编写程序。编写麻烦，执行效率好。</li>
<li>汇编语言：使用符号代替机器码。汇编与反汇编。汇编语言只适用于某些硬件，兼容性差。计算机底层一些硬件驱动现在还用汇编语言编写。</li>
<li>高级语言：和英语语法类似，并且和硬件关系不紧密，通过高级语言编写的程序可以在不同的硬件系统中执行。</li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>计算机</tag>
      </tags>
  </entry>
  <entry>
    <title>运算符(操作符)</title>
    <url>/2024/03/31/%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<h1 id="算数运算符"><a class="markdownIt-Anchor" href="#算数运算符"></a> 算数运算符</h1>
<p><code>+</code>可以计算和拼串<br />
<code>-</code>计算<br />
<code>*</code>可以计算和复制字符串<br />
<code>/</code>计算结果总是浮点型<br />
<code>//</code>相除后只会保留整数位, 取整. 注意, 如果被除数是浮点符, 那么仍会返回浮点数.<br />
<code>**</code>幂运算<br />
<code>** 0.5</code> 开方运算<br />
<code>%</code> 相除取余数</p>
<h1 id="赋值运算符"><a class="markdownIt-Anchor" href="#赋值运算符"></a> 赋值运算符</h1>
<p>将右边的值赋给左边的变量.<br />
<code>=</code><br />
<code>+=</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">a += <span class="number">5</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure>
<p>返回</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a = 15</span><br></pre></td></tr></table></figure>
<p><code>-=</code><br />
<code>*=</code><br />
<code>/=</code><br />
<code>//=</code><br />
<code>**=</code><br />
<code>%=</code></p>
<h1 id="关系运算符"><a class="markdownIt-Anchor" href="#关系运算符"></a> 关系运算符</h1>
<p>关系运算符用来比较两个值之间的关系, 只会返回bool值<br />
<code>&gt;</code><br />
<code>&gt;=</code><br />
<code>&lt;</code><br />
<code>&lt;=</code><br />
<code>==</code>比较两个值是否相等(注意这里跟上边赋值运算符中<code>=</code>的区别)<br />
<code>!=</code>两个值是否不想等<br />
两个字符串可以比较大小, 它实际比的是Unicode编码. 但是字符串不能跟数值进行比较大小.<br />
<code>True</code>和<code>1</code>是两个不同的对象, 但是它们的值是相同的. 判断两个对象是否是同一个对象用<code>is</code>和<code>is not</code>, 它们两个比较的是对象的id.<br />
只有id相同的对象才是同一个对象.</p>
<h1 id="逻辑运算符"><a class="markdownIt-Anchor" href="#逻辑运算符"></a> 逻辑运算符</h1>
<ul>
<li><code>not</code>逻辑非<br />
对符号右侧的值进行<code>非</code>运算. 对bool进行取反操作, 对非bool值先转换成bool值再取反.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="literal">True</span></span><br><span class="line">a = <span class="keyword">not</span> a</span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure>
<p>返回Flase</p>
<ul>
<li>
<p><code>and</code>逻辑与</p>
<ul>
<li>对符号两侧的进行与运算.</li>
<li>符号两侧的值都为True时,才返回True. 否则返回False.</li>
<li>只有多个条件同时满足, 才执行某个语句时候, 我们用逻辑与.</li>
<li>Python中的与是短路的与, 它是在语句中找Flase, 如果第一个值为False, 那么后边的它就不看了, 直接返回Flase.<br />
比如这里  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="literal">True</span> <span class="keyword">and</span> <span class="built_in">print</span>(<span class="string">&quot;你猜我出来吗&quot;</span>)</span><br></pre></td></tr></table></figure>
此时返回<code>你猜我出来吗</code>. 因为第一个值为True, 所以print()会执行.  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="literal">False</span> <span class="keyword">and</span> <span class="built_in">print</span>(<span class="string">&quot;你猜我出来吗&quot;</span>)</span><br></pre></td></tr></table></figure>
此时返回<code> </code>什么结果也不会返回</li>
</ul>
</li>
<li>
<p><code>or</code>逻辑或<br />
两端只要有一个True就会返回True<br />
同理这里的or是在找True. 找到True以后, 不在执行后边的语句, 没有找到, 就继续执行后边的语句.</p>
</li>
</ul>
<div class="tip warning"><p>当我们对非布尔值进行与或运算时, Python会将它当作布尔值进行运算, 并返回原值.</p>
</div>
<p>比如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result = <span class="number">1</span> <span class="keyword">and</span> <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure>
<p>此时, 会返回2, 首先可以确定它返回原值, 第二与运算是找false, 第一个1肯定是True, 它会继续走到第2步, 第2个值不管是True还是False都会将其返回.<br />
同理or运算</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result = <span class="number">1</span> <span class="keyword">or</span> <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure>
<p>此时, 肯定返回1, 因为or运算是找True的.</p>
<h1 id="条件运算符又叫三元运算符"><a class="markdownIt-Anchor" href="#条件运算符又叫三元运算符"></a> 条件运算符(又叫三元运算符)</h1>
<p>语法: 语句1 if 条件表达式 else 语句2<br />
执行流程:</p>
<ol>
<li>首先执行条件表达式, 进行求值判断</li>
<li>如果为True, 执行语句1</li>
<li>如果为False, 执行语句2</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;你好&quot;</span>) <span class="keyword">if</span> <span class="literal">False</span> <span class="keyword">else</span> <span class="built_in">print</span>(<span class="string">&quot;Hello&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>返回Hello</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>进制</title>
    <url>/2024/03/31/%E8%BF%9B%E5%88%B6/</url>
    <content><![CDATA[<ul>
<li>十进制
<ul>
<li>满十进一。十进制中有10个数字0 1 2 3 4 5 6 7 8 9. 10是由连个数字构成的，不属于10进制中的数字。</li>
</ul>
</li>
<li>二进制
<ul>
<li>满二进一</li>
<li>二进制中只有2个数字0 1</li>
<li>二进制如何数数 0 1 10  11 100 101 110 111 1000 1001 1010 1011 1100</li>
</ul>
</li>
<li>八进制
<ul>
<li>满八进一</li>
<li>一共有8个数字0 1 2 3 4 5 6 7</li>
<li>八进制如何数数0 1 2 3 4 5 6 7 10 11 12 13 14 15 16 17 20</li>
</ul>
</li>
<li>十六进制（查看二进制数据时，一般会以十六进制的形式显示）
<ul>
<li>满十六进一</li>
<li>十六进制有16个数字 0 1 2 3 4 5 6 7 8 9 a b c d e f</li>
<li>十六进制如何数数0 1 2 3 4 5 6 7 8 9  a b c d e 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21</li>
</ul>
</li>
</ul>
<hr />
<p>内存相当于一个个小格子，1个小格子存储一个0或者1 。内存中的一个小格子我们叫做bit（位），bit是计算机中的最小单位。</p>
<p>8bit = 1byte。byte是我们最小的可操作单位。</p>
<p>1024byte = 1kb（千字节）</p>
<p>1024kb = 1mb（兆字节）</p>
<p>1024mb = 1gb（吉字节）</p>
<p>1204gb = 1tb（太字节）</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>python</category>
        <category>python基础</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>计算机</tag>
      </tags>
  </entry>
  <entry>
    <title>分类</title>
    <url>/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/css/header_style.css</url>
    <content><![CDATA[/* 导航栏做居中处理 */
#nav-right{
    flex:1 1 auto;
    justify-content: flex-end;
    margin-left: auto;
    display: flex;
    flex-wrap: nowrap;
}

/* 去除导航栏选项中底下的蓝条 */
#nav *::after{
    background-color: transparent!important;
}

/* 导航栏菜单鼠标移入字体放大 */
#nav #site-name:hover, 
#nav .menus_item:hover, 
#nav #search-button:hover{
    font-size:28px;
}

.nav-fixed #nav{
    transform: translateY(58px)!important;
    -webkit-transform: translateY(58px)!important;
    -moz-transform: translateY(58px)!important;
    -ms-transform: translateY(58px)!important;
    -o-transform: translateY(58px)!important;
}
#nav{
    transition: none!important;
    -webkit-transition: none!important;
    -moz-transition: none!important;
    -ms-transition: none!important;
    -o-transition: none!important;
}
/* 2024-3-31 增加文章页现实宽度*/
.layout{
  max-width:1400px;
}
@media screen and (min-width: 900px) {
    html.hide-aside .layout>div:first-child {
        width: 80%
    }
}]]></content>
  </entry>
  <entry>
    <title>关于</title>
    <url>/about/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/css/postpage_style.css</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/js/script.js</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>文档</title>
    <url>/files/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>标签</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>电影</title>
    <url>/movies/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>链接</title>
    <url>/link/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>音乐</title>
    <url>/music/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
